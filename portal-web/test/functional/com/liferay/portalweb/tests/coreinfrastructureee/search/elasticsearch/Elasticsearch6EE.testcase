@component-name = "portal-search-ee"
definition {

	property portal.release = "true";
	property portal.suite.search.engine = "elasticsearch6";
	property portal.upstream = "true";
	property test.run.environment = "EE";
	property testray.main.component.name = "Elasticsearch Impl";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			MessageboardsThread.tearDownCP();

			DMDocument.tearDownCP();

			Page.tearDownCP();
		}
	}

	test AssertSynonymBulkActions {
		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Search Tuning");

		AssertElementNotPresent(locator1 = "Pagination#PAGINATION_BAR");

		for (var counter : list "1,2,3,4,5,6") {
			SearchAdministration.addSynonymSet(synonyms = "phone${counter},mobile${counter}");
		}

		AssertElementNotPresent(locator1 = "Pagination#PAGINATION_BAR");

		PortletEntry.selectAll();

		for (var counter : list "1,2,3,4,5,6") {
			AssertChecked(
				key_rowEntry = "phone${counter}, mobile${counter}",
				locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_CHECKBOX");
		}

		PortletEntry.deselectAll();

		for (var counter : list "1,2,3,4,5,6") {
			AssertNotChecked(
				key_rowEntry = "phone${counter}, mobile${counter}",
				locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_CHECKBOX");
		}

		LexiconEntry.selectEntry(key_rowEntry = "phone2, mobile2");

		LexiconEntry.selectEntry(key_rowEntry = "phone5, mobile5");

		AssertTextEquals(
			locator1 = "ManagementBar#NAVBAR_TEXT",
			value1 = "2 of 6 Selected");

		ClickNoError(locator1 = "Icon#DELETE");

		Confirm();

		AssertElementNotPresent(
			key_rowEntry = "phone2, mobile2",
			locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME");

		AssertElementNotPresent(
			key_rowEntry = "phone5, mobile5",
			locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME");

		for (var counter : list "1,3,4,6") {
			AssertElementPresent(
				key_rowEntry = "phone${counter}, mobile${counter}",
				locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME");
		}

		PortletEntry.selectAll();

		ClickNoError(locator1 = "Icon#DELETE");

		Confirm();

		for (var counter : list "1,2,3,4,5,6") {
			AssertElementNotPresent(
				key_rowEntry = "phone${counter}, mobile${counter}",
				locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME");
		}

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no entries.");
	}

	@priority = "5"
	test PortalClusterSmokeTest {
		property app.server.bundles.size = "1";
		property cluster.enabled = "true";
		property remote.elasticsearch.enabled = "true";
		property test.name.skip.portal.instance = "Elasticsearch6EE#PortalClusterSmokeTest";

		Elasticsearch.viewClusterStatusViaClusterHealthAPI(numberOfNodes = "1");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Message Boards");

		MessageboardsThread.addCP(
			threadBody = "Orange",
			threadSubject = "Apple");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Documents and Media");

		DMDocument.addCP(
			dmDocumentDescription = "Orange",
			dmDocumentFile = "Document_1.txt",
			dmDocumentTitle = "Apple");

		Navigator.openURL();

		SearchPortlets.searchEmbedded(searchTerm = "Apple");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "Apple",
			searchAssetType = "Document");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "Apple",
			searchAssetType = "Message Boards Message");

		Navigator.openURL();

		SearchPortlets.searchEmbedded(searchTerm = "Orange");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "Apple",
			searchAssetType = "Document");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "Apple",
			searchAssetType = "Message Boards Message");

		User.logoutPG(
			password = "test",
			userEmailAddress = "test@liferay.com");

		User.loginPG(
			nodePort = "9080",
			password = "test",
			userEmailAddress = "test@liferay.com");

		Clustering.shutdownSpecificServer(nodePort = "8");

		SearchPortlets.searchEmbedded(searchTerm = "Apple");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "Apple",
			searchAssetType = "Document");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "Apple",
			searchAssetType = "Message Boards Message");

		Navigator.openSpecificURL(url = "http://localhost:9080");

		SearchPortlets.searchEmbedded(searchTerm = "Orange");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "Apple",
			searchAssetType = "Document");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "Apple",
			searchAssetType = "Message Boards Message");
	}

	test SearchWithSynonyms {
		property portal.acceptance = "true";

		for (var title : list "banana,red apple,citrus-orange,blue.berry!,\"xigua\"") {
			JSONWebcontent.addWebContent(
				content = "WC Content",
				groupName = "Guest",
				title = "${title}");
		}

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Search Tuning");

		SearchAdministration.addSynonymSet(synonyms = "banana,red apple,blue.berry!,&quot;xigua&quot;,fruit,sweet");

		AssertElementPresent(
			key_synonyms = "banana, red apple, blue.berry!, &quot;xigua&quot;, fruit, sweet",
			locator1 = "SearchAdmin#SYNONYMS_ENTRY");

		Navigator.openURL();

		var searchTerms = "banana,red apple,blue.berry!,fruit,sweet";

		// Workaround for LPS-98622
		// var searchTerms = "banana,red apple,blue.berry!,&quot;xigua&quot;,fruit,sweet";

		for (var searchTerm : list "${searchTerms}") {
			SearchPortlets.searchEmbedded(searchTerm = "${searchTerm}");

			SearchResultPortlet.viewMultipleSearchResults(
				resultsList = "banana/Web Content Article,red apple/Web Content Article,blue.berry!/Web Content Article,&quot;xigua&quot;/Web Content Article",
				searchTerm = "${searchTerm}");
		}

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Search Tuning");

		SearchAdministration.editSynonymSet(
			addSynonyms = "pear",
			deleteSynonym = "banana",
			synonymSet = "banana, red apple, blue.berry!, &quot;xigua&quot;, fruit, sweet");

		AssertElementPresent(
			key_synonyms = "red apple, blue.berry!, &quot;xigua&quot;, fruit, sweet, pear",
			locator1 = "SearchAdmin#SYNONYMS_ENTRY");

		Navigator.openURL();

		SearchPortlets.searchEmbedded(searchTerm = "banana");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "banana",
			searchAssetType = "Web Content Article");

		SearchPortlets.searchEmbedded(searchTerm = "pear");

		SearchResultPortlet.viewSearchResultNotPresent(
			searchAssetTitle = "banana",
			searchAssetType = "Web Content Article");

		SearchResultPortlet.viewMultipleSearchResults(
			resultsList = "red apple/Web Content Article,blue.berry!/Web Content Article,&quot;xigua&quot;/Web Content Article",
			searchTerm = "pear");

		SearchPortlets.searchEmbedded(searchTerm = "red apple");

		SearchResultPortlet.viewSearchResultNotPresent(
			searchAssetTitle = "banana",
			searchAssetType = "Web Content Article");

		SearchResultPortlet.viewMultipleSearchResults(
			resultsList = "red apple/Web Content Article,blue.berry!/Web Content Article,&quot;xigua&quot;/Web Content Article",
			searchTerm = "red apple");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Search Tuning");

		SearchAdministration.addSynonymSet(synonyms = "red apple,citrus-orange");

		AssertElementPresent(
			key_synonyms = "red apple, citrus-orange",
			locator1 = "SearchAdmin#SYNONYMS_ENTRY");

		Navigator.openURL();

		SearchPortlets.searchEmbedded(searchTerm = "red apple");

		SearchResultPortlet.viewMultipleSearchResults(
			resultsList = "red apple/Web Content Article,blue.berry!/Web Content Article,&quot;xigua&quot;/Web Content Article,citrus-orange/Web Content Article",
			searchTerm = "red apple");

		SearchPortlets.searchEmbedded(searchTerm = "citrus-orange");

		SearchResultPortlet.viewMultipleSearchResults(
			resultsList = "red apple/Web Content Article,citrus-orange/Web Content Article",
			searchTerm = "citrus-orange");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Search Tuning");

		SearchAdministration.deleteSynonymSet(synonymSet = "red apple, blue.berry!, &quot;xigua&quot;, fruit, sweet, pear");

		Navigator.openURL();

		SearchPortlets.searchEmbedded(searchTerm = "fruit");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "fruit");
	}

	@priority = "5"
	test XPackSmokeTest {
		property elastic.xpack.enabled = "true";
		property osgi.app.includes = "portal-search-elasticsearch6-xpack-monitoring,portal-search-elasticsearch6-xpack-security";
		property remote.elasticsearch.enabled = "true";
		property test.name.skip.portal.instance = "Elasticsearch6EE#XPackSmokeTest";

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages");

		SitePages.addPublicPage(
			pageName = "X-Pack Monitoring Page",
			sitePageType = "Widget Page");

		SitePages.configurePage(
			columnName = "1 Column",
			pageName = "X-Pack Monitoring Page",
			privacy = "Public Pages",
			sitePageType = "Widget Page");

		Navigator.gotoPage(pageName = "X-Pack Monitoring Page");

		Portlet.addPG(portletName = "X-Pack Monitoring");

		XPackMonitoring.viewPG();

		User.logoutPG();

		Navigator.gotoPage(pageName = "X-Pack Monitoring Page");

		XPackMonitoring.viewAsGuestPG();
	}

}